services:
  node_exporter:
    image: quay.io/prometheus/node-exporter
    container_name: node_exporter
    command: 
      - '--path.rootfs=/host'
      - '--web.listen-address=localhost:9091'
    network_mode: host
    pid: host
    restart: unless-stopped
    volumes:
      - '/:/host:ro,rslave'
    ports:
      - '9091:9091'

  rknpu_exporter:
    image: python:3.12-slim
    container_name: rknpu_exporter
    working_dir: /app
    volumes:
      - ./scripts:/app
      - /sys/kernel/debug/rknpu/load:/rknpu-load.txt:ro
    ports:
      - '9092:9092'
    command: sh -c "python -m pip install flask --no-cache-dir && python rknpu-exporter.py"
    restart: unless-stopped
    network_mode: host
  
  init_prometheus:
    image: quay.io/prometheus/prometheus
    user: root
    entrypoint:
      - /bin/sh
      - -c
      - |
        chown -R 65534:65534 /prometheus
    volumes:
      - /bird-detections/prometheus-data:/prometheus
  prometheus:
    image: quay.io/prometheus/prometheus
    container_name: prometheus
    volumes:
      - ./cfg/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - /bird-detections/prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
    ports:
      - '9090:9090'
    depends_on:
      - node_exporter
      - rknpu_exporter
      - init_prometheus 
    restart: unless-stopped
    network_mode: host

  grafana:
    image: grafana/grafana
    container_name: grafana
    volumes:
      - /bird-detections/grafana-data:/var/lib/grafana
    ports:
      - '3000:3000'
    restart: unless-stopped
    network_mode: host
    user: '0'
  
  bird_detections_db:
    image: mysql
    container_name: bird_detections_db
    volumes:
      - /bird-detections/mysql-data:/var/lib/mysql
      - ./cfg/init.sql:/docker-entrypoint-initdb.d/init.sql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=potato
      - MYSQL_DATABASE=grafana_data
      - MYSQL_USER=grafana_user
      - MYSQL_PASSWORD=grafana_password
    restart: unless-stopped
    network_mode: host

  video0_extract:
    depends_on:
      - bird_detections_db
    image: ghcr.io/edoyango/birds
    container_name: video0-extract
    volumes:
      - /bird-detections:/output
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    devices:
      - /dev/video0
    privileged: true
    security_opt: 
      - systempaths=unconfined
    command:
      - "/dev/video0"
      - "0"
      - "video0-"
    network_mode: host
  
  video2_extract:
    depends_on:
      - bird_detections_db
    image: ghcr.io/edoyango/birds
    container_name: video2-extract
    volumes:
      - /bird-detections:/output
      - /etc/localtime:/etc/localtime:ro
    restart: unless-stopped
    devices:
      - /dev/video2
    privileged: true
    security_opt: 
      - systempaths=unconfined
    command:
      - "/dev/video2"
      - "0"
      - "video2-"
    network_mode: host